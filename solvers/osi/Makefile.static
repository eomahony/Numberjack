include ../../make.project
MAINDIR = $(CURDIR)/../..

#-----------------------------------------------------------------------------
# paths
#-----------------------------------------------------------------------------
OBJDIR = $(CURDIR)/obj
SRCDIR = $(CURDIR)/src
PYTHON = $(CURDIR)/python
SWIG   = swig
PYLIB  = `python-config --cflags`

#-----------------------------------------------------------------------------
# Main Program
#-----------------------------------------------------------------------------
MAINNAME     = Osi
MAINOBJ	     = $(MAINNAME).o
MAINSRC	     = $(addprefix $(SRCDIR)/,$(MAINOBJ:.o=.cpp))
MAINOBJFILES = $(addprefix $(OBJDIR)/,$(MAINOBJ))

MIPDIR   = $(MAINDIR)/solvers/mip
MIPFLAGS = -I$(MIPDIR)/src/
MIPLIBS  = $(MIPDIR)/obj/MipWrapper.o

# OSI
OSIVER  = 0.105.2
OSIDIR  = $(CURDIR)/Osi-$(OSIVER)
OSIINCS = -I$(OSIDIR)/Osi/src/Osi
OSILIBS = $(OSIDIR)/Osi/src/Osi/.libs/*.o
# Using libOsi.so as proof that OSI/CoinUtils have been compiled
# Can probably do better than this.
OSICOMPILED = $(OSIDIR)/Osi/src/Osi/.libs/libOsi.so

# Include glpk stuff so load_gmpl will work...
# must be compiled after osiglpk...
GLPK = ../osiglpk/glpk-4.47/src/.libs/*.o

GLPKVER = 4.47
GLPKDIR = $(MAINDIR)/solvers/osiglpk/glpk-$(GLPKVER)

# COIN
COINDIR  = $(OSIDIR)/CoinUtils
COININCS = -I$(COINDIR)/src
COINLIBS = $(COINDIR)/src/.libs/*.o
DYNLINKS = -llapack -lz -lbz2

INCLUDES  = $(OSIINCS) $(COININCS) $(MIPFLAGS)
LIBRARIES = $(OSILIBS) $(COINLIBS) $(MIPLIBS) $(GLPK)

#-----------------------------------------------------------------------------
# Interface
#-----------------------------------------------------------------------------
IFILE	= $(PYTHON)/$(MAINNAME).i
PYFILE	= $(PYTHON)/$(MAINNAME).py
WXXFILE	= $(PYTHON)/$(MAINNAME)_wrap.cxx
WOBFILE	= $(PYTHON)/$(MAINNAME)_wrap.o
SOFILE	= $(PYTHON)/_$(MAINNAME).so

CFLAGS = -Wall -ffloat-store -lm $(INCLUDES) $(DYNLINKS) -O3 #-g
LFLAGS = $(LIBRARIES)
#-----------------------------------------------------------------------------
# Rules
#-----------------------------------------------------------------------------

CXX = g++

wrapper: $(IFILE) $(WXXFILE) $(OSICOMPILED) $(MIPLIBS) $(SOFILE) $(MAINOBJFILES)

$(OSICOMPILED):
	#cd $(OSIDIR) && make || (./configure && make)
	cd $(OSIDIR) && make || (./configure --with-glpk-incdir=$(GLPKDIR)/src/  && make)

install_python: wrapper
	cd $(PYTHON); python $(MAINDIR)/tools/setup.py install

clean_swig:
	-rm -rf $(OBJDIR)/* $(PYTHON)/* *~ $(SRCDIR)/*~

clean_all: clean clean_swig
	cd $(CORE)/; make clean

clean:
	-rm -rf $(OBJDIR)/* $(PYTHON)/*o $(PYTHON)/*~ $(PYTHON)/build *~ $(SRCDIR)/*~

$(MIPDIR)/obj/%.o: $(MIPDIR)/src/MipWrapper.cpp
	@echo "-> compiling $@"
	$(CXX) $(CFLAGS) -fPIC -c -o $@ $<

$(OBJDIR)/%.o:	$(SRCDIR)/%.cpp
	@echo "-> compiling $@"
	$(CXX) $(CFLAGS) -fPIC -c -o $@ $<

$(PYTHON)/%_wrap.o: $(PYTHON)/%_wrap.cxx
	@echo "-> compiling $@"
	$(CXX) $(CFLAGS) -I$(SRCDIR) -I$(PYLIB) -fPIC -c $< -o $@

$(PYTHON)/%_wrap.cxx: $(PYTHON)/%.i
	@echo "-> compiling $@"
	$(SWIG) -c++ -python $<
	python $(MAINDIR)/tools/finalize.py $(<:.i=.py) MipWrapper

$(PYTHON)/%.i: $(SRCDIR)/%.hpp $(MIPDIR)/src/MipWrapper.hpp
	-python $(MAINDIR)/tools/mk_subinterface.py mip MipWrapper $<

$(PYTHON)/_%.so: $(OBJDIR)/%.o $(PYTHON)/%_wrap.o $(MIPLIBS) $(OSICOMPILED)
	@echo "-> linking $@"
	$(CXX) $(BUNDLE) -Wno-long-double $(CFLAGS) $(LFLAGS) $(MAINOBJFILES) $(PYTHON)/Osi_wrap.o -o $@

#---- EOF --------------------------------------------------------------------
