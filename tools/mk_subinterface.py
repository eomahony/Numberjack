#! /usr/bin/env python

#try:
import sys

wrap_type = sys.argv[1]
wrap_name = sys.argv[2]
sub_path  = sys.argv[3]
inter_wrap_type = None 
inter_wrap_name = None
if len(sys.argv) > 4:
    inter_wrap_type = sys.argv[4]
    inter_wrap_name = sys.argv[5]

sol_name = sub_path[sub_path.rfind('/')+1:sub_path.rfind('.')]

interface = open( './python/'+sol_name+'.i', 'w' )

interface.write('/* File: '+sol_name+'.i,'+' generated by mk_interface.py */\n')
interface.write('%module '+sol_name+' \n')
if len(sys.argv) > 4:
    interface.write( '%import(module="'+inter_wrap_name+'") "../'+inter_wrap_type+'/src/'+inter_wrap_name+'.hpp"\n' )
interface.write( '%import(module="'+wrap_name+'") "../'+wrap_type+'/src/'+wrap_name+'.hpp"\n\n%{\n' )

declarations = ''
extern_keyword = False
for line in open(sub_path):
    splitted = line.split()
    #print line,
    if len(splitted) > 0:
        #print splitted
        if extern_keyword == True:
            #print 'extern body'
            interface.write(line)
            if splitted[0] == '}':
                #print 'extern end'
                extern_keyword = False
        elif splitted[0] == '#include':
            #print 'include'
            interface.write(line)
        elif splitted[0] == 'extern':
            #print 'extern start'
            interface.write(line)
            extern_keyword = True
        elif splitted[0] == "//python":
            declarations += line[8:]
        elif splitted[0][0] != '#' :
            #print 'body'
            declarations += line
    else:
        #print 'nothing'
        declarations += line



interface.write( '%}\n\n%inline %{\n' )
interface.write(declarations)
interface.write( '\n%}\n')

#except:
#    print 'abort'
#    pass
